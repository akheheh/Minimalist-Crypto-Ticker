{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\lxhei\\\\Desktop\\\\Projects\\\\Minimalist-Crypto-Ticker\\\\src\\\\Result.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Result = props => {\n  _s();\n\n  const [price, setPrice] = useState(\"\");\n\n  const checker = () => {\n    if (price === \"\") {\n      return \"\";\n    } else {\n      return '$';\n    }\n  };\n  /*Once the Results component has recieved the crypto info (coin and currency codes),\r\n  we can pass them (as props) into our sendReq() method, which will open a GET request via\r\n  Axios with these codes passed into the request URL.\r\n  */\n\n\n  const sendReq = async () => {\n    const res = await axios.get(`https://api.cryptonator.com/api/ticker/${props.token}-${props.currency}`);\n    return res;\n  };\n\n  useEffect(() => {\n    //Update call every second\n    setInterval(() => {\n      console.log(price);\n\n      if (props.token && props.currency) {\n        sendReq().then(resp => {\n          setPrice(parseFloat(price).toFixed(7));\n        });\n      }\n    }, 1000);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"coinTitle\",\n      children: props.token ? props.token.toUpperCase() : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"priceTitle\",\n      children: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Result, \"I1bZ8U2TVhq5gfF2VZNzBFn/PUk=\");\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["C:/Users/lxhei/Desktop/Projects/Minimalist-Crypto-Ticker/src/Result.js"],"names":["React","useState","useEffect","axios","Result","props","price","setPrice","checker","sendReq","res","get","token","currency","setInterval","console","log","then","resp","parseFloat","toFixed","toUpperCase"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMO,OAAO,GAAG,MAAM;AAElB,QAAGF,KAAK,KAAK,EAAb,EAAiB;AACb,aAAO,EAAP;AACH,KAFD,MAEO;AACH,aAAO,GAAP;AACH;AACJ,GAPD;AAQA;AACJ;AACA;AACA;;;AAEI,QAAMG,OAAO,GAAG,YAAY;AAExB,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,0CAAyCN,KAAK,CAACO,KAAM,IAAGP,KAAK,CAACQ,QAAS,EAAlF,CAAlB;AAEA,WAAOH,GAAP;AACH,GALD;;AAOAR,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAY,IAAAA,WAAW,CAAC,MAAM;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;;AACA,UAAGD,KAAK,CAACO,KAAN,IAAeP,KAAK,CAACQ,QAAxB,EAAkC;AAC9BJ,QAAAA,OAAO,GAAGQ,IAAV,CAAeC,IAAI,IAAI;AACnBX,UAAAA,QAAQ,CAACY,UAAU,CAACb,KAAD,CAAV,CAAkBc,OAAlB,CAA0B,CAA1B,CAAD,CAAR;AACH,SAFD;AAGH;AACJ,KAPU,EAOR,IAPQ,CAAX;AAUH,GAZQ,CAAT;AAcA,sBACI;AAAK,IAAA,SAAS,EAAG,SAAjB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAG,WAAhB;AAAA,gBAA6Bf,KAAK,CAACO,KAAN,GAAcP,KAAK,CAACO,KAAN,CAAYS,WAAZ,EAAd,GAA0C;AAAvE;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAG,YAAhB;AAAA,gBAA8Bf;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA1CD;;GAAMF,M;;KAAAA,M;AA6CN,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Result = (props) => {\r\n    const [price, setPrice] = useState(\"\");\r\n    const checker = () => {\r\n\r\n        if(price === \"\") {\r\n            return \"\";\r\n        } else {\r\n            return '$';\r\n        }\r\n    }\r\n    /*Once the Results component has recieved the crypto info (coin and currency codes),\r\n    we can pass them (as props) into our sendReq() method, which will open a GET request via\r\n    Axios with these codes passed into the request URL.\r\n    */\r\n   \r\n    const sendReq = async () => {\r\n\r\n        const res = await axios.get(`https://api.cryptonator.com/api/ticker/${props.token}-${props.currency}`\r\n        )\r\n        return res;\r\n    }\r\n\r\n    useEffect(() => {\r\n        //Update call every second\r\n        setInterval(() => {\r\n            console.log(price);\r\n            if(props.token && props.currency) {\r\n                sendReq().then(resp => {\r\n                    setPrice(parseFloat(price).toFixed(7));\r\n                })\r\n            }\r\n        }, 1000);\r\n        \r\n        \r\n    })\r\n\r\n    return(\r\n        <div className = \"results\">\r\n            <h3 className = \"coinTitle\">{props.token ? props.token.toUpperCase() : \"\"}</h3>\r\n            <h3 className = \"priceTitle\">{price}</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Result;"]},"metadata":{},"sourceType":"module"}