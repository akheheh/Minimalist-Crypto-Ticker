{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\lxhei\\\\Desktop\\\\Projects\\\\Minimalist-Crypto-Ticker\\\\src\\\\Result.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Result = props => {\n  _s();\n\n  //state = {price: \"\"};\n  const [price, setPrice] = useState(\"\");\n\n  checker = () => {\n    if (price === \"\") {\n      return \"\";\n    } else {\n      return '$' + parseFloat(price).toFixed(2);\n    }\n  };\n  /*Once the Results component has recieved the crypto info (coin and currency codes),\r\n  we can pass them (as props) into our sendReq() method, which will open a GET request via\r\n  Axios with these codes passed into the request URL.\r\n  */\n\n\n  sendReq = () => {\n    axios.get(`https://api.cryptonator.com/api/ticker/${props.coin}-${props.currency}`).then(resp => {\n      //console.log(resp);\n      setPrice(resp.data.ticker.price);\n    });\n  }; //do this to resolve the memory leak warning from the componentDidUpdate() method\n\n  /*componentDidMount() {\r\n      console.log(\"Component has mounted.\")\r\n  }\r\n    componentDidUpdate() {\r\n      this.sendReq();\r\n  }*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"coinTitle\",\n      children: this.props.coin ? this.props.coin.toUpperCase() : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"priceTitle\",\n      children: this.checker()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Result, \"ryNHAA0Ldvi5rxMqW50027zfZS4=\");\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["C:/Users/lxhei/Desktop/Projects/Minimalist-Crypto-Ticker/src/Result.js"],"names":["React","useState","useEffect","axios","Result","props","price","setPrice","checker","parseFloat","toFixed","sendReq","get","coin","currency","then","resp","data","ticker","toUpperCase"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AACAO,EAAAA,OAAO,GAAG,MAAM;AACZ,QAAGF,KAAK,KAAK,EAAb,EAAiB;AACb,aAAO,EAAP;AACH,KAFD,MAEO;AACH,aAAO,MAAMG,UAAU,CAACH,KAAD,CAAV,CAAkBI,OAAlB,CAA0B,CAA1B,CAAb;AACH;AACJ,GAND;AAOA;AACJ;AACA;AACA;;;AAEIC,EAAAA,OAAO,GAAG,MAAM;AACZR,IAAAA,KAAK,CAACS,GAAN,CAAW,0CAAyCP,KAAK,CAACQ,IAAK,IAAGR,KAAK,CAACS,QAAS,EAAjF,EACEC,IADF,CACOC,IAAI,IAAI;AACX;AACAT,MAAAA,QAAQ,CAACS,IAAI,CAACC,IAAL,CAAUC,MAAV,CAAiBZ,KAAlB,CAAR;AACH,KAJD;AAKH,GAND,CAfsB,CAuBtB;;AACA;AACJ;AACA;AACA;AACA;AACA;;;AAEI,sBACI;AAAK,IAAA,SAAS,EAAG,SAAjB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAG,WAAhB;AAAA,gBAA6B,KAAKD,KAAL,CAAWQ,IAAX,GAAkB,KAAKR,KAAL,CAAWQ,IAAX,CAAgBM,WAAhB,EAAlB,GAAkD;AAA/E;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAG,YAAhB;AAAA,gBAA8B,KAAKX,OAAL;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CArCD;;GAAMJ,M;;KAAAA,M;AAwCN,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Result = (props) => {\r\n    //state = {price: \"\"};\r\n    const [price, setPrice] = useState(\"\");\r\n    checker = () => {\r\n        if(price === \"\") {\r\n            return \"\";\r\n        } else {\r\n            return '$' + parseFloat(price).toFixed(2);\r\n        }\r\n    }\r\n    /*Once the Results component has recieved the crypto info (coin and currency codes),\r\n    we can pass them (as props) into our sendReq() method, which will open a GET request via\r\n    Axios with these codes passed into the request URL.\r\n    */\r\n   \r\n    sendReq = () => {\r\n        axios.get(`https://api.cryptonator.com/api/ticker/${props.coin}-${props.currency}`\r\n        ).then(resp => {\r\n            //console.log(resp);\r\n            setPrice(resp.data.ticker.price)\r\n        })\r\n    }\r\n\r\n    //do this to resolve the memory leak warning from the componentDidUpdate() method\r\n    /*componentDidMount() {\r\n        console.log(\"Component has mounted.\")\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.sendReq();\r\n    }*/\r\n    return(\r\n        <div className = \"results\">\r\n            <h3 className = \"coinTitle\">{this.props.coin ? this.props.coin.toUpperCase() : \"\"}</h3>\r\n            <h3 className = \"priceTitle\">{this.checker()}</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Result;"]},"metadata":{},"sourceType":"module"}