{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\lxhei\\\\Desktop\\\\DeveloperPortfolio\\\\crypto-ticker\\\\Minimalist-Crypto-Ticker\\\\src\\\\Result.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass Result extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      price: \"\"\n    };\n\n    this.checker = () => {\n      if (this.state.price === \"\") {\n        return \"\";\n      } else {\n        return '$' + parseFloat(this.state.price).toFixed(2);\n      }\n    };\n\n    this.sendReq = () => {\n      axios.get(`https://api.cryptonator.com/api/ticker/${this.props.coin}-${this.props.currency}`).then(resp => {\n        console.log(resp);\n        this.setState({\n          price: resp.data.ticker.price\n        });\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"coinTitle\",\n        children: this.props.coin ? this.props.coin.toUpperCase() : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"priceTitle\",\n        children: this.checker()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default Result;","map":{"version":3,"sources":["C:/Users/lxhei/Desktop/DeveloperPortfolio/crypto-ticker/Minimalist-Crypto-Ticker/src/Result.js"],"names":["React","axios","Result","Component","state","price","checker","parseFloat","toFixed","sendReq","get","props","coin","currency","then","resp","console","log","setState","data","ticker","componentDidMount","render","toUpperCase"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AAACC,MAAAA,KAAK,EAAE;AAAR,KADyB;;AAAA,SAEjCC,OAFiC,GAEvB,MAAM;AACZ,UAAG,KAAKF,KAAL,CAAWC,KAAX,KAAqB,EAAxB,EAA4B;AACxB,eAAO,EAAP;AACH,OAFD,MAEO;AACH,eAAO,MAAME,UAAU,CAAC,KAAKH,KAAL,CAAWC,KAAZ,CAAV,CAA6BG,OAA7B,CAAqC,CAArC,CAAb;AACH;AACJ,KARgC;;AAAA,SAUjCC,OAViC,GAUvB,MAAM;AACZR,MAAAA,KAAK,CAACS,GAAN,CAAW,0CAAyC,KAAKC,KAAL,CAAWC,IAAK,IAAG,KAAKD,KAAL,CAAWE,QAAS,EAA3F,EACEC,IADF,CACOC,IAAI,IAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,aAAKG,QAAL,CAAc;AAACb,UAAAA,KAAK,EAAEU,IAAI,CAACI,IAAL,CAAUC,MAAV,CAAiBf;AAAzB,SAAd;AACH,OALD;AAMH,KAjBgC;AAAA;;AAmBjCgB,EAAAA,iBAAiB,GAAG,CAEnB;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAG,WAAhB;AAAA,kBAA6B,KAAKX,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWC,IAAX,CAAgBW,WAAhB,EAAlB,GAAkD;AAA/E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAG,YAAhB;AAAA,kBAA8B,KAAKjB,OAAL;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA7BgC;;AA8BpC;AAGD,eAAeJ,MAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Result extends React.Component {\r\n    state = {price: \"\"};\r\n    checker = () => {\r\n        if(this.state.price === \"\") {\r\n            return \"\";\r\n        } else {\r\n            return '$' + parseFloat(this.state.price).toFixed(2);\r\n        }\r\n    }\r\n\r\n    sendReq = () => {\r\n        axios.get(`https://api.cryptonator.com/api/ticker/${this.props.coin}-${this.props.currency}`\r\n        ).then(resp => {\r\n            console.log(resp);\r\n            \r\n            this.setState({price: resp.data.ticker.price})\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n    render() {\r\n        return(\r\n            <div className = \"results\">\r\n                <h3 className = \"coinTitle\">{this.props.coin ? this.props.coin.toUpperCase() : \"\"}</h3>\r\n                <h3 className = \"priceTitle\">{this.checker()}</h3>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\nexport default Result;"]},"metadata":{},"sourceType":"module"}