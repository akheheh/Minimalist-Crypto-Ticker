{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\lxhei\\\\Desktop\\\\DeveloperPortfolio\\\\crypto-ticker\\\\Minimalist-Crypto-Ticker\\\\src\\\\Result.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass Result extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      price: \"\"\n    };\n\n    this.checker = () => {\n      if (this.state.price === \"\") {\n        return \"\";\n      } else {\n        return '$' + parseFloat(this.state.price).toFixed(2);\n      }\n    };\n\n    this.sendReq = () => {\n      axios.get(`https://api.cryptonator.com/api/ticker/${this.props.coin}-${this.props.currency}`).then(resp => {\n        //console.log(resp);\n        if (resp.data) {\n          console.log(resp);\n          this.setState({\n            price: resp.data.ticker.price\n          });\n        } else if (!resp.success) {\n          this.setState({\n            price: \"INVALID COIN CODE\"\n          });\n        }\n      });\n    };\n  }\n\n  //do this to resolve the memory leak warning from the componentDidUpdate() method\n  componentDidMount() {\n    console.log(\"Component has mounted.\");\n  }\n\n  componentDidUpdate() {\n    this.sendReq();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"coinTitle\",\n        children: this.props.coin ? this.props.coin.toUpperCase() : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"priceTitle\",\n        children: this.checker()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default Result;","map":{"version":3,"sources":["C:/Users/lxhei/Desktop/DeveloperPortfolio/crypto-ticker/Minimalist-Crypto-Ticker/src/Result.js"],"names":["React","axios","Result","Component","state","price","checker","parseFloat","toFixed","sendReq","get","props","coin","currency","then","resp","data","console","log","setState","ticker","success","componentDidMount","componentDidUpdate","render","toUpperCase"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AAACC,MAAAA,KAAK,EAAE;AAAR,KADyB;;AAAA,SAEjCC,OAFiC,GAEvB,MAAM;AACZ,UAAG,KAAKF,KAAL,CAAWC,KAAX,KAAqB,EAAxB,EAA4B;AACxB,eAAO,EAAP;AACH,OAFD,MAEO;AACH,eAAO,MAAME,UAAU,CAAC,KAAKH,KAAL,CAAWC,KAAZ,CAAV,CAA6BG,OAA7B,CAAqC,CAArC,CAAb;AACH;AACJ,KARgC;;AAAA,SAcjCC,OAdiC,GAcvB,MAAM;AACZR,MAAAA,KAAK,CAACS,GAAN,CAAW,0CAAyC,KAAKC,KAAL,CAAWC,IAAK,IAAG,KAAKD,KAAL,CAAWE,QAAS,EAA3F,EACEC,IADF,CACOC,IAAI,IAAI;AACX;AACA,YAAGA,IAAI,CAACC,IAAR,EAAc;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,eAAKI,QAAL,CAAc;AAACd,YAAAA,KAAK,EAAEU,IAAI,CAACC,IAAL,CAAUI,MAAV,CAAiBf;AAAzB,WAAd;AACH,SAHD,MAKK,IAAG,CAACU,IAAI,CAACM,OAAT,EAAkB;AACnB,eAAKF,QAAL,CAAc;AAACd,YAAAA,KAAK,EAAE;AAAR,WAAd;AACH;AACJ,OAXD;AAYH,KA3BgC;AAAA;;AA6BjC;AACAiB,EAAAA,iBAAiB,GAAG;AAChBL,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH;;AAEDK,EAAAA,kBAAkB,GAAG;AACjB,SAAKd,OAAL;AACH;;AACDe,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAG,WAAhB;AAAA,kBAA6B,KAAKb,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWC,IAAX,CAAgBa,WAAhB,EAAlB,GAAkD;AAA/E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAG,YAAhB;AAAA,kBAA8B,KAAKnB,OAAL;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA5CgC;;AA6CpC;AAGD,eAAeJ,MAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Result extends React.Component {\r\n    state = {price: \"\"};\r\n    checker = () => {\r\n        if(this.state.price === \"\") {\r\n            return \"\";\r\n        } else {\r\n            return '$' + parseFloat(this.state.price).toFixed(2);\r\n        }\r\n    }\r\n    /*Once the Results component has recieved the crypto info (coin and currency codes),\r\n    we can pass them (as props) into our sendReq() method, which will open a GET request via\r\n    Axios with these codes passed into the request URL.\r\n    */\r\n   \r\n    sendReq = () => {\r\n        axios.get(`https://api.cryptonator.com/api/ticker/${this.props.coin}-${this.props.currency}`\r\n        ).then(resp => {\r\n            //console.log(resp);\r\n            if(resp.data) {\r\n                console.log(resp);\r\n                this.setState({price: resp.data.ticker.price})\r\n            }\r\n            \r\n            else if(!resp.success) {\r\n                this.setState({price: \"INVALID COIN CODE\"})\r\n            }\r\n        });\r\n    }\r\n\r\n    //do this to resolve the memory leak warning from the componentDidUpdate() method\r\n    componentDidMount() {\r\n        console.log(\"Component has mounted.\")\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.sendReq();\r\n    }\r\n    render() {\r\n        return(\r\n            <div className = \"results\">\r\n                <h3 className = \"coinTitle\">{this.props.coin ? this.props.coin.toUpperCase() : \"\"}</h3>\r\n                <h3 className = \"priceTitle\">{this.checker()}</h3>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n\r\nexport default Result;"]},"metadata":{},"sourceType":"module"}